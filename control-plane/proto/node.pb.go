// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: node.proto

package proto

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NodeStatus int32

const (
	NodeStatus_NODE_STATUS_UNSPECIFIED NodeStatus = 0
	NodeStatus_NODE_ONLINE             NodeStatus = 1
	NodeStatus_NODE_OFFLINE            NodeStatus = 2
	NodeStatus_NODE_DEGRADED           NodeStatus = 3
)

// Enum value maps for NodeStatus.
var (
	NodeStatus_name = map[int32]string{
		0: "NODE_STATUS_UNSPECIFIED",
		1: "NODE_ONLINE",
		2: "NODE_OFFLINE",
		3: "NODE_DEGRADED",
	}
	NodeStatus_value = map[string]int32{
		"NODE_STATUS_UNSPECIFIED": 0,
		"NODE_ONLINE":             1,
		"NODE_OFFLINE":            2,
		"NODE_DEGRADED":           3,
	}
)

func (x NodeStatus) Enum() *NodeStatus {
	p := new(NodeStatus)
	*p = x
	return p
}

func (x NodeStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NodeStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_node_proto_enumTypes[0].Descriptor()
}

func (NodeStatus) Type() protoreflect.EnumType {
	return &file_node_proto_enumTypes[0]
}

func (x NodeStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NodeStatus.Descriptor instead.
func (NodeStatus) EnumDescriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{0}
}

type RegisterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Ip            string                 `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Hostname      string                 `protobuf:"bytes,3,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Location      string                 `protobuf:"bytes,4,opt,name=location,proto3" json:"location,omitempty"`
	Provider      string                 `protobuf:"bytes,5,opt,name=provider,proto3" json:"provider,omitempty"`
	Version       string                 `protobuf:"bytes,6,opt,name=version,proto3" json:"version,omitempty"`
	Tags          []string               `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty"`
	IdTenant      string                 `protobuf:"bytes,8,opt,name=id_tenant,json=idTenant,proto3" json:"id_tenant,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterRequest) Reset() {
	*x = RegisterRequest{}
	mi := &file_node_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRequest) ProtoMessage() {}

func (x *RegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRequest.ProtoReflect.Descriptor instead.
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *RegisterRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *RegisterRequest) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *RegisterRequest) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *RegisterRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *RegisterRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *RegisterRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *RegisterRequest) GetIdTenant() string {
	if x != nil {
		return x.IdTenant
	}
	return ""
}

type RegisterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	NodeId        string                 `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterResponse) Reset() {
	*x = RegisterResponse{}
	mi := &file_node_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterResponse) ProtoMessage() {}

func (x *RegisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterResponse.ProtoReflect.Descriptor instead.
func (*RegisterResponse) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RegisterResponse) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

type PingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Cpu           float32                `protobuf:"fixed32,2,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory        float32                `protobuf:"fixed32,3,opt,name=memory,proto3" json:"memory,omitempty"`
	UptimeSeconds int32                  `protobuf:"varint,4,opt,name=uptime_seconds,json=uptimeSeconds,proto3" json:"uptime_seconds,omitempty"`
	Connections   int32                  `protobuf:"varint,5,opt,name=connections,proto3" json:"connections,omitempty"`
	Status        string                 `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"` // healthy, slow, critical
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	mi := &file_node_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{2}
}

func (x *PingRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *PingRequest) GetCpu() float32 {
	if x != nil {
		return x.Cpu
	}
	return 0
}

func (x *PingRequest) GetMemory() float32 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *PingRequest) GetUptimeSeconds() int32 {
	if x != nil {
		return x.UptimeSeconds
	}
	return 0
}

func (x *PingRequest) GetConnections() int32 {
	if x != nil {
		return x.Connections
	}
	return 0
}

func (x *PingRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type PingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // ok, failed, warning
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	mi := &file_node_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{3}
}

func (x *PingResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type GetAuditLogsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limit         int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Action        *string                `protobuf:"bytes,3,opt,name=action,proto3,oneof" json:"action,omitempty"`
	UserId        *string                `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
	TenantId      *string                `protobuf:"bytes,5,opt,name=tenant_id,json=tenantId,proto3,oneof" json:"tenant_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAuditLogsRequest) Reset() {
	*x = GetAuditLogsRequest{}
	mi := &file_node_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAuditLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuditLogsRequest) ProtoMessage() {}

func (x *GetAuditLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuditLogsRequest.ProtoReflect.Descriptor instead.
func (*GetAuditLogsRequest) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{4}
}

func (x *GetAuditLogsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetAuditLogsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetAuditLogsRequest) GetAction() string {
	if x != nil && x.Action != nil {
		return *x.Action
	}
	return ""
}

func (x *GetAuditLogsRequest) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *GetAuditLogsRequest) GetTenantId() string {
	if x != nil && x.TenantId != nil {
		return *x.TenantId
	}
	return ""
}

type AuditLogEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Role          string                 `protobuf:"bytes,3,opt,name=role,proto3" json:"role,omitempty"`
	Action        string                 `protobuf:"bytes,4,opt,name=action,proto3" json:"action,omitempty"`
	Target        string                 `protobuf:"bytes,5,opt,name=target,proto3" json:"target,omitempty"`
	Details       string                 `protobuf:"bytes,6,opt,name=details,proto3" json:"details,omitempty"`
	IpAddress     string                 `protobuf:"bytes,7,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	UserAgent     string                 `protobuf:"bytes,8,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"`
	TenantId      string                 `protobuf:"bytes,9,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	Timestamp     string                 `protobuf:"bytes,10,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuditLogEntry) Reset() {
	*x = AuditLogEntry{}
	mi := &file_node_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuditLogEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditLogEntry) ProtoMessage() {}

func (x *AuditLogEntry) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditLogEntry.ProtoReflect.Descriptor instead.
func (*AuditLogEntry) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{5}
}

func (x *AuditLogEntry) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AuditLogEntry) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AuditLogEntry) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *AuditLogEntry) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *AuditLogEntry) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *AuditLogEntry) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

func (x *AuditLogEntry) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *AuditLogEntry) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

func (x *AuditLogEntry) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *AuditLogEntry) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

type GetAuditLogsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Logs          []*AuditLogEntry       `protobuf:"bytes,1,rep,name=logs,proto3" json:"logs,omitempty"`
	Total         int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAuditLogsResponse) Reset() {
	*x = GetAuditLogsResponse{}
	mi := &file_node_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAuditLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuditLogsResponse) ProtoMessage() {}

func (x *GetAuditLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuditLogsResponse.ProtoReflect.Descriptor instead.
func (*GetAuditLogsResponse) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{6}
}

func (x *GetAuditLogsResponse) GetLogs() []*AuditLogEntry {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *GetAuditLogsResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type TenantRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TenantId      string                 `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TenantRequest) Reset() {
	*x = TenantRequest{}
	mi := &file_node_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TenantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantRequest) ProtoMessage() {}

func (x *TenantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantRequest.ProtoReflect.Descriptor instead.
func (*TenantRequest) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{7}
}

func (x *TenantRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

type NodeListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nodes         []*Node                `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeListResponse) Reset() {
	*x = NodeListResponse{}
	mi := &file_node_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeListResponse) ProtoMessage() {}

func (x *NodeListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeListResponse.ProtoReflect.Descriptor instead.
func (*NodeListResponse) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{8}
}

func (x *NodeListResponse) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type UpdateNodeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Ip            string                 `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
	Tags          map[string]string      `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNodeRequest) Reset() {
	*x = UpdateNodeRequest{}
	mi := &file_node_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNodeRequest) ProtoMessage() {}

func (x *UpdateNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNodeRequest.ProtoReflect.Descriptor instead.
func (*UpdateNodeRequest) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateNodeRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *UpdateNodeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateNodeRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *UpdateNodeRequest) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type NodeStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Status        NodeStatus             `protobuf:"varint,2,opt,name=status,proto3,enum=nodepb.NodeStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeStatusRequest) Reset() {
	*x = NodeStatusRequest{}
	mi := &file_node_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeStatusRequest) ProtoMessage() {}

func (x *NodeStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeStatusRequest.ProtoReflect.Descriptor instead.
func (*NodeStatusRequest) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{10}
}

func (x *NodeStatusRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *NodeStatusRequest) GetStatus() NodeStatus {
	if x != nil {
		return x.Status
	}
	return NodeStatus_NODE_STATUS_UNSPECIFIED
}

type GetNodeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNodeRequest) Reset() {
	*x = GetNodeRequest{}
	mi := &file_node_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeRequest) ProtoMessage() {}

func (x *GetNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeRequest.ProtoReflect.Descriptor instead.
func (*GetNodeRequest) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{11}
}

func (x *GetNodeRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

type NodeID struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeID) Reset() {
	*x = NodeID{}
	mi := &file_node_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeID) ProtoMessage() {}

func (x *NodeID) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeID.ProtoReflect.Descriptor instead.
func (*NodeID) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{12}
}

func (x *NodeID) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

type Node struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name            string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Ip              string                 `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
	TenantId        string                 `protobuf:"bytes,4,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	Status          string                 `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	Location        string                 `protobuf:"bytes,6,opt,name=location,proto3" json:"location,omitempty"`
	Provider        string                 `protobuf:"bytes,7,opt,name=provider,proto3" json:"provider,omitempty"`
	SoftwareVersion string                 `protobuf:"bytes,8,opt,name=software_version,json=softwareVersion,proto3" json:"software_version,omitempty"`
	Tags            []string               `protobuf:"bytes,9,rep,name=tags,proto3" json:"tags,omitempty"`
	Os              string                 `protobuf:"bytes,10,opt,name=os,proto3" json:"os,omitempty"`
	LastSeen        string                 `protobuf:"bytes,11,opt,name=last_seen,json=lastSeen,proto3" json:"last_seen,omitempty"`
	CreatedAt       string                 `protobuf:"bytes,12,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt       string                 `protobuf:"bytes,13,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	IsBlacklisted   bool                   `protobuf:"varint,14,opt,name=is_blacklisted,json=isBlacklisted,proto3" json:"is_blacklisted,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Node) Reset() {
	*x = Node{}
	mi := &file_node_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{13}
}

func (x *Node) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Node) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Node) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *Node) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *Node) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Node) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *Node) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *Node) GetSoftwareVersion() string {
	if x != nil {
		return x.SoftwareVersion
	}
	return ""
}

func (x *Node) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Node) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *Node) GetLastSeen() string {
	if x != nil {
		return x.LastSeen
	}
	return ""
}

func (x *Node) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Node) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *Node) GetIsBlacklisted() bool {
	if x != nil {
		return x.IsBlacklisted
	}
	return false
}

type CommandRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"` // restart, update, etc.
	Payload       string                 `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommandRequest) Reset() {
	*x = CommandRequest{}
	mi := &file_node_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandRequest) ProtoMessage() {}

func (x *CommandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandRequest.ProtoReflect.Descriptor instead.
func (*CommandRequest) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{14}
}

func (x *CommandRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *CommandRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CommandRequest) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

type Command struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Payload       string                 `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Command) Reset() {
	*x = Command{}
	mi := &file_node_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{15}
}

func (x *Command) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Command) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Command) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

func (x *Command) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type CommandResultRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CommandId     string                 `protobuf:"bytes,1,opt,name=command_id,json=commandId,proto3" json:"command_id,omitempty"`
	NodeId        string                 `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Success       bool                   `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
	Output        string                 `protobuf:"bytes,4,opt,name=output,proto3" json:"output,omitempty"`
	Timestamp     string                 `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommandResultRequest) Reset() {
	*x = CommandResultRequest{}
	mi := &file_node_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommandResultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandResultRequest) ProtoMessage() {}

func (x *CommandResultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandResultRequest.ProtoReflect.Descriptor instead.
func (*CommandResultRequest) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{16}
}

func (x *CommandResultRequest) GetCommandId() string {
	if x != nil {
		return x.CommandId
	}
	return ""
}

func (x *CommandResultRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *CommandResultRequest) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CommandResultRequest) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

func (x *CommandResultRequest) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

type SearchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TenantId      string                 `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	Query         string                 `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchRequest) Reset() {
	*x = SearchRequest{}
	mi := &file_node_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRequest) ProtoMessage() {}

func (x *SearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRequest.ProtoReflect.Descriptor instead.
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{17}
}

func (x *SearchRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *SearchRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type SearchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nodes         []*Node                `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchResponse) Reset() {
	*x = SearchResponse{}
	mi := &file_node_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResponse) ProtoMessage() {}

func (x *SearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResponse.ProtoReflect.Descriptor instead.
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{18}
}

func (x *SearchResponse) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type ListNodesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TenantId      string                 `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNodesRequest) Reset() {
	*x = ListNodesRequest{}
	mi := &file_node_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNodesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodesRequest) ProtoMessage() {}

func (x *ListNodesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodesRequest.ProtoReflect.Descriptor instead.
func (*ListNodesRequest) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{19}
}

func (x *ListNodesRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

type ListNodesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nodes         []*Node                `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNodesResponse) Reset() {
	*x = ListNodesResponse{}
	mi := &file_node_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNodesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodesResponse) ProtoMessage() {}

func (x *ListNodesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodesResponse.ProtoReflect.Descriptor instead.
func (*ListNodesResponse) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{20}
}

func (x *ListNodesResponse) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type CountActiveNodesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TenantId      string                 `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	SinceSeconds  int32                  `protobuf:"varint,2,opt,name=since_seconds,json=sinceSeconds,proto3" json:"since_seconds,omitempty"` // 3600 pour 1h
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CountActiveNodesRequest) Reset() {
	*x = CountActiveNodesRequest{}
	mi := &file_node_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CountActiveNodesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountActiveNodesRequest) ProtoMessage() {}

func (x *CountActiveNodesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountActiveNodesRequest.ProtoReflect.Descriptor instead.
func (*CountActiveNodesRequest) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{21}
}

func (x *CountActiveNodesRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *CountActiveNodesRequest) GetSinceSeconds() int32 {
	if x != nil {
		return x.SinceSeconds
	}
	return 0
}

type CountActiveNodesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int32                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CountActiveNodesResponse) Reset() {
	*x = CountActiveNodesResponse{}
	mi := &file_node_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CountActiveNodesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountActiveNodesResponse) ProtoMessage() {}

func (x *CountActiveNodesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_node_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountActiveNodesResponse.ProtoReflect.Descriptor instead.
func (*CountActiveNodesResponse) Descriptor() ([]byte, []int) {
	return file_node_proto_rawDescGZIP(), []int{22}
}

func (x *CountActiveNodesResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

var File_node_proto protoreflect.FileDescriptor

const file_node_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"node.proto\x12\x06nodepb\x1a\x1cgoogle/api/annotations.proto\x1a\x1bgoogle/protobuf/empty.proto\"\xd9\x01\n" +
	"\x0fRegisterRequest\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x0e\n" +
	"\x02ip\x18\x02 \x01(\tR\x02ip\x12\x1a\n" +
	"\bhostname\x18\x03 \x01(\tR\bhostname\x12\x1a\n" +
	"\blocation\x18\x04 \x01(\tR\blocation\x12\x1a\n" +
	"\bprovider\x18\x05 \x01(\tR\bprovider\x12\x18\n" +
	"\aversion\x18\x06 \x01(\tR\aversion\x12\x12\n" +
	"\x04tags\x18\a \x03(\tR\x04tags\x12\x1b\n" +
	"\tid_tenant\x18\b \x01(\tR\bidTenant\"E\n" +
	"\x10RegisterResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x17\n" +
	"\anode_id\x18\x02 \x01(\tR\x06nodeId\"\xb1\x01\n" +
	"\vPingRequest\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x10\n" +
	"\x03cpu\x18\x02 \x01(\x02R\x03cpu\x12\x16\n" +
	"\x06memory\x18\x03 \x01(\x02R\x06memory\x12%\n" +
	"\x0euptime_seconds\x18\x04 \x01(\x05R\ruptimeSeconds\x12 \n" +
	"\vconnections\x18\x05 \x01(\x05R\vconnections\x12\x16\n" +
	"\x06status\x18\x06 \x01(\tR\x06status\"&\n" +
	"\fPingResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\"\xc5\x01\n" +
	"\x13GetAuditLogsRequest\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x05R\x06offset\x12\x1b\n" +
	"\x06action\x18\x03 \x01(\tH\x00R\x06action\x88\x01\x01\x12\x1c\n" +
	"\auser_id\x18\x04 \x01(\tH\x01R\x06userId\x88\x01\x01\x12 \n" +
	"\ttenant_id\x18\x05 \x01(\tH\x02R\btenantId\x88\x01\x01B\t\n" +
	"\a_actionB\n" +
	"\n" +
	"\b_user_idB\f\n" +
	"\n" +
	"_tenant_id\"\x8f\x02\n" +
	"\rAuditLogEntry\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x12\n" +
	"\x04role\x18\x03 \x01(\tR\x04role\x12\x16\n" +
	"\x06action\x18\x04 \x01(\tR\x06action\x12\x16\n" +
	"\x06target\x18\x05 \x01(\tR\x06target\x12\x18\n" +
	"\adetails\x18\x06 \x01(\tR\adetails\x12\x1d\n" +
	"\n" +
	"ip_address\x18\a \x01(\tR\tipAddress\x12\x1d\n" +
	"\n" +
	"user_agent\x18\b \x01(\tR\tuserAgent\x12\x1b\n" +
	"\ttenant_id\x18\t \x01(\tR\btenantId\x12\x1c\n" +
	"\ttimestamp\x18\n" +
	" \x01(\tR\ttimestamp\"W\n" +
	"\x14GetAuditLogsResponse\x12)\n" +
	"\x04logs\x18\x01 \x03(\v2\x15.nodepb.AuditLogEntryR\x04logs\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\",\n" +
	"\rTenantRequest\x12\x1b\n" +
	"\ttenant_id\x18\x01 \x01(\tR\btenantId\"6\n" +
	"\x10NodeListResponse\x12\"\n" +
	"\x05nodes\x18\x01 \x03(\v2\f.nodepb.NodeR\x05nodes\"\xc2\x01\n" +
	"\x11UpdateNodeRequest\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x0e\n" +
	"\x02ip\x18\x03 \x01(\tR\x02ip\x127\n" +
	"\x04tags\x18\x04 \x03(\v2#.nodepb.UpdateNodeRequest.TagsEntryR\x04tags\x1a7\n" +
	"\tTagsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"X\n" +
	"\x11NodeStatusRequest\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12*\n" +
	"\x06status\x18\x02 \x01(\x0e2\x12.nodepb.NodeStatusR\x06status\")\n" +
	"\x0eGetNodeRequest\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\"!\n" +
	"\x06NodeID\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\"\xf8\x02\n" +
	"\x04Node\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x0e\n" +
	"\x02ip\x18\x03 \x01(\tR\x02ip\x12\x1b\n" +
	"\ttenant_id\x18\x04 \x01(\tR\btenantId\x12\x16\n" +
	"\x06status\x18\x05 \x01(\tR\x06status\x12\x1a\n" +
	"\blocation\x18\x06 \x01(\tR\blocation\x12\x1a\n" +
	"\bprovider\x18\a \x01(\tR\bprovider\x12)\n" +
	"\x10software_version\x18\b \x01(\tR\x0fsoftwareVersion\x12\x12\n" +
	"\x04tags\x18\t \x03(\tR\x04tags\x12\x0e\n" +
	"\x02os\x18\n" +
	" \x01(\tR\x02os\x12\x1b\n" +
	"\tlast_seen\x18\v \x01(\tR\blastSeen\x12\x1d\n" +
	"\n" +
	"created_at\x18\f \x01(\tR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\r \x01(\tR\tupdatedAt\x12%\n" +
	"\x0eis_blacklisted\x18\x0e \x01(\bR\risBlacklisted\"W\n" +
	"\x0eCommandRequest\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x18\n" +
	"\apayload\x18\x03 \x01(\tR\apayload\"f\n" +
	"\aCommand\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x18\n" +
	"\apayload\x18\x03 \x01(\tR\apayload\x12\x1d\n" +
	"\n" +
	"created_at\x18\x04 \x01(\tR\tcreatedAt\"\x9e\x01\n" +
	"\x14CommandResultRequest\x12\x1d\n" +
	"\n" +
	"command_id\x18\x01 \x01(\tR\tcommandId\x12\x17\n" +
	"\anode_id\x18\x02 \x01(\tR\x06nodeId\x12\x18\n" +
	"\asuccess\x18\x03 \x01(\bR\asuccess\x12\x16\n" +
	"\x06output\x18\x04 \x01(\tR\x06output\x12\x1c\n" +
	"\ttimestamp\x18\x05 \x01(\tR\ttimestamp\"B\n" +
	"\rSearchRequest\x12\x1b\n" +
	"\ttenant_id\x18\x01 \x01(\tR\btenantId\x12\x14\n" +
	"\x05query\x18\x02 \x01(\tR\x05query\"4\n" +
	"\x0eSearchResponse\x12\"\n" +
	"\x05nodes\x18\x01 \x03(\v2\f.nodepb.NodeR\x05nodes\"/\n" +
	"\x10ListNodesRequest\x12\x1b\n" +
	"\ttenant_id\x18\x01 \x01(\tR\btenantId\"7\n" +
	"\x11ListNodesResponse\x12\"\n" +
	"\x05nodes\x18\x01 \x03(\v2\f.nodepb.NodeR\x05nodes\"[\n" +
	"\x17CountActiveNodesRequest\x12\x1b\n" +
	"\ttenant_id\x18\x01 \x01(\tR\btenantId\x12#\n" +
	"\rsince_seconds\x18\x02 \x01(\x05R\fsinceSeconds\"0\n" +
	"\x18CountActiveNodesResponse\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x05R\x05count*_\n" +
	"\n" +
	"NodeStatus\x12\x1b\n" +
	"\x17NODE_STATUS_UNSPECIFIED\x10\x00\x12\x0f\n" +
	"\vNODE_ONLINE\x10\x01\x12\x10\n" +
	"\fNODE_OFFLINE\x10\x02\x12\x11\n" +
	"\rNODE_DEGRADED\x10\x032\xa9\n" +
	"\n" +
	"\vNodeService\x12_\n" +
	"\fRegisterNode\x12\x17.nodepb.RegisterRequest\x1a\x18.nodepb.RegisterResponse\"\x1c\x82\xd3\xe4\x93\x02\x16:\x01*\"\x11/v1/register-node\x12F\n" +
	"\x04Ping\x12\x13.nodepb.PingRequest\x1a\x14.nodepb.PingResponse\"\x13\x82\xd3\xe4\x93\x02\r:\x01*\"\b/v1/ping\x12g\n" +
	"\fGetAuditLogs\x12\x1b.nodepb.GetAuditLogsRequest\x1a\x1c.nodepb.GetAuditLogsResponse\"\x1c\x82\xd3\xe4\x93\x02\x16\x12\x14/v1/nodes/audit-logs\x12W\n" +
	"\x11ListNodesByTenant\x12\x15.nodepb.TenantRequest\x1a\x18.nodepb.NodeListResponse\"\x11\x82\xd3\xe4\x93\x02\v\x12\t/v1/nodes\x12g\n" +
	"\x12UpdateNodeMetadata\x12\x19.nodepb.UpdateNodeRequest\x1a\x16.google.protobuf.Empty\"\x1e\x82\xd3\xe4\x93\x02\x18:\x01*\x1a\x13/v1/nodes/{node_id}\x12i\n" +
	"\rSetNodeStatus\x12\x19.nodepb.NodeStatusRequest\x1a\x16.google.protobuf.Empty\"%\x82\xd3\xe4\x93\x02\x1f:\x01*\"\x1a/v1/nodes/{node_id}/status\x12P\n" +
	"\vGetNodeByID\x12\x16.nodepb.GetNodeRequest\x1a\f.nodepb.Node\"\x1b\x82\xd3\xe4\x93\x02\x15\x12\x13/v1/nodes/{node_id}\x12u\n" +
	"\x10CountActiveNodes\x12\x1f.nodepb.CountActiveNodesRequest\x1a .nodepb.CountActiveNodesResponse\"\x1e\x82\xd3\xe4\x93\x02\x18\x12\x16/v1/nodes/active_count\x12j\n" +
	"\x14ListBlacklistedNodes\x12\x18.nodepb.ListNodesRequest\x1a\x19.nodepb.ListNodesResponse\"\x1d\x82\xd3\xe4\x93\x02\x17\x12\x15/v1/nodes/blacklisted\x12^\n" +
	"\rBlacklistNode\x12\x0e.nodepb.NodeID\x1a\x16.google.protobuf.Empty\"%\x82\xd3\xe4\x93\x02\x1f\"\x1d/v1/nodes/{node_id}/blacklist\x12b\n" +
	"\x0fUnblacklistNode\x12\x0e.nodepb.NodeID\x1a\x16.google.protobuf.Empty\"'\x82\xd3\xe4\x93\x02!\"\x1f/v1/nodes/{node_id}/unblacklist\x12V\n" +
	"\vSearchNodes\x12\x15.nodepb.SearchRequest\x1a\x16.nodepb.SearchResponse\"\x18\x82\xd3\xe4\x93\x02\x12\x12\x10/v1/nodes/search\x12=\n" +
	"\x0eStreamCommands\x12\x16.nodepb.CommandRequest\x1a\x0f.nodepb.Command(\x010\x01\x12K\n" +
	"\x13ReportCommandResult\x12\x1c.nodepb.CommandResultRequest\x1a\x16.google.protobuf.EmptyBDZBgithub.com/thekrauss/Mini-CDN-DDoS-Lab-with-Go/control-plane/protob\x06proto3"

var (
	file_node_proto_rawDescOnce sync.Once
	file_node_proto_rawDescData []byte
)

func file_node_proto_rawDescGZIP() []byte {
	file_node_proto_rawDescOnce.Do(func() {
		file_node_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_node_proto_rawDesc), len(file_node_proto_rawDesc)))
	})
	return file_node_proto_rawDescData
}

var file_node_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_node_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_node_proto_goTypes = []any{
	(NodeStatus)(0),                  // 0: nodepb.NodeStatus
	(*RegisterRequest)(nil),          // 1: nodepb.RegisterRequest
	(*RegisterResponse)(nil),         // 2: nodepb.RegisterResponse
	(*PingRequest)(nil),              // 3: nodepb.PingRequest
	(*PingResponse)(nil),             // 4: nodepb.PingResponse
	(*GetAuditLogsRequest)(nil),      // 5: nodepb.GetAuditLogsRequest
	(*AuditLogEntry)(nil),            // 6: nodepb.AuditLogEntry
	(*GetAuditLogsResponse)(nil),     // 7: nodepb.GetAuditLogsResponse
	(*TenantRequest)(nil),            // 8: nodepb.TenantRequest
	(*NodeListResponse)(nil),         // 9: nodepb.NodeListResponse
	(*UpdateNodeRequest)(nil),        // 10: nodepb.UpdateNodeRequest
	(*NodeStatusRequest)(nil),        // 11: nodepb.NodeStatusRequest
	(*GetNodeRequest)(nil),           // 12: nodepb.GetNodeRequest
	(*NodeID)(nil),                   // 13: nodepb.NodeID
	(*Node)(nil),                     // 14: nodepb.Node
	(*CommandRequest)(nil),           // 15: nodepb.CommandRequest
	(*Command)(nil),                  // 16: nodepb.Command
	(*CommandResultRequest)(nil),     // 17: nodepb.CommandResultRequest
	(*SearchRequest)(nil),            // 18: nodepb.SearchRequest
	(*SearchResponse)(nil),           // 19: nodepb.SearchResponse
	(*ListNodesRequest)(nil),         // 20: nodepb.ListNodesRequest
	(*ListNodesResponse)(nil),        // 21: nodepb.ListNodesResponse
	(*CountActiveNodesRequest)(nil),  // 22: nodepb.CountActiveNodesRequest
	(*CountActiveNodesResponse)(nil), // 23: nodepb.CountActiveNodesResponse
	nil,                              // 24: nodepb.UpdateNodeRequest.TagsEntry
	(*emptypb.Empty)(nil),            // 25: google.protobuf.Empty
}
var file_node_proto_depIdxs = []int32{
	6,  // 0: nodepb.GetAuditLogsResponse.logs:type_name -> nodepb.AuditLogEntry
	14, // 1: nodepb.NodeListResponse.nodes:type_name -> nodepb.Node
	24, // 2: nodepb.UpdateNodeRequest.tags:type_name -> nodepb.UpdateNodeRequest.TagsEntry
	0,  // 3: nodepb.NodeStatusRequest.status:type_name -> nodepb.NodeStatus
	14, // 4: nodepb.SearchResponse.nodes:type_name -> nodepb.Node
	14, // 5: nodepb.ListNodesResponse.nodes:type_name -> nodepb.Node
	1,  // 6: nodepb.NodeService.RegisterNode:input_type -> nodepb.RegisterRequest
	3,  // 7: nodepb.NodeService.Ping:input_type -> nodepb.PingRequest
	5,  // 8: nodepb.NodeService.GetAuditLogs:input_type -> nodepb.GetAuditLogsRequest
	8,  // 9: nodepb.NodeService.ListNodesByTenant:input_type -> nodepb.TenantRequest
	10, // 10: nodepb.NodeService.UpdateNodeMetadata:input_type -> nodepb.UpdateNodeRequest
	11, // 11: nodepb.NodeService.SetNodeStatus:input_type -> nodepb.NodeStatusRequest
	12, // 12: nodepb.NodeService.GetNodeByID:input_type -> nodepb.GetNodeRequest
	22, // 13: nodepb.NodeService.CountActiveNodes:input_type -> nodepb.CountActiveNodesRequest
	20, // 14: nodepb.NodeService.ListBlacklistedNodes:input_type -> nodepb.ListNodesRequest
	13, // 15: nodepb.NodeService.BlacklistNode:input_type -> nodepb.NodeID
	13, // 16: nodepb.NodeService.UnblacklistNode:input_type -> nodepb.NodeID
	18, // 17: nodepb.NodeService.SearchNodes:input_type -> nodepb.SearchRequest
	15, // 18: nodepb.NodeService.StreamCommands:input_type -> nodepb.CommandRequest
	17, // 19: nodepb.NodeService.ReportCommandResult:input_type -> nodepb.CommandResultRequest
	2,  // 20: nodepb.NodeService.RegisterNode:output_type -> nodepb.RegisterResponse
	4,  // 21: nodepb.NodeService.Ping:output_type -> nodepb.PingResponse
	7,  // 22: nodepb.NodeService.GetAuditLogs:output_type -> nodepb.GetAuditLogsResponse
	9,  // 23: nodepb.NodeService.ListNodesByTenant:output_type -> nodepb.NodeListResponse
	25, // 24: nodepb.NodeService.UpdateNodeMetadata:output_type -> google.protobuf.Empty
	25, // 25: nodepb.NodeService.SetNodeStatus:output_type -> google.protobuf.Empty
	14, // 26: nodepb.NodeService.GetNodeByID:output_type -> nodepb.Node
	23, // 27: nodepb.NodeService.CountActiveNodes:output_type -> nodepb.CountActiveNodesResponse
	21, // 28: nodepb.NodeService.ListBlacklistedNodes:output_type -> nodepb.ListNodesResponse
	25, // 29: nodepb.NodeService.BlacklistNode:output_type -> google.protobuf.Empty
	25, // 30: nodepb.NodeService.UnblacklistNode:output_type -> google.protobuf.Empty
	19, // 31: nodepb.NodeService.SearchNodes:output_type -> nodepb.SearchResponse
	16, // 32: nodepb.NodeService.StreamCommands:output_type -> nodepb.Command
	25, // 33: nodepb.NodeService.ReportCommandResult:output_type -> google.protobuf.Empty
	20, // [20:34] is the sub-list for method output_type
	6,  // [6:20] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_node_proto_init() }
func file_node_proto_init() {
	if File_node_proto != nil {
		return
	}
	file_node_proto_msgTypes[4].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_node_proto_rawDesc), len(file_node_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_node_proto_goTypes,
		DependencyIndexes: file_node_proto_depIdxs,
		EnumInfos:         file_node_proto_enumTypes,
		MessageInfos:      file_node_proto_msgTypes,
	}.Build()
	File_node_proto = out.File
	file_node_proto_goTypes = nil
	file_node_proto_depIdxs = nil
}
